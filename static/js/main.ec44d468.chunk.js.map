{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","isReset","sortedGoods","goods","sort","a","b","alphabet","localeCompare","length","reverse","getSortedGoods","className","type","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAUJ,GAAaE,EACvBG,EAhCR,SACEC,EADF,GAGG,IADCN,EACF,EADEA,UAAWE,EACb,EADaA,WAEPG,EAAW,YAAOC,GAqBxB,OAnBIN,GACFK,EAAYE,MAAK,SAACC,EAAGC,GACnB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEI,OAASH,EAAEG,OAEtB,QACE,OAAO,MAKXV,GACFG,EAAYQ,UAGPR,EAOaS,CAClBjB,EACA,CAAEG,YAAWE,eAQf,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcJ,EAASc,WAErCQ,QAAS,kBAAMjB,EAAaL,EAASc,WALvC,iCAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcJ,EAASgB,SAErCM,QAAS,kBAAMjB,EAAaL,EAASgB,SALvC,4BAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAc,SAAAgB,GAAO,OAAKA,MAL3C,qBAUCf,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZjB,EAAa,IACbE,GAAc,IAqCR,sBAUJ,6BACGE,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCnHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec44d468.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\ninterface SortParams {\n  sortField: string;\n  isReversed: boolean;\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  { sortField, isReversed }: SortParams,\n) {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((a, b) => {\n      switch (sortField) {\n        case SortType.alphabet:\n          return a.localeCompare(b);\n\n        case SortType.length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const isReset = sortField || isReversed;\n  const sortedGoods = getSortedGoods(\n    goodsFromServer,\n    { sortField, isReversed },\n  );\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.alphabet,\n          })}\n          onClick={() => setSortField(SortType.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n          onClick={() => setSortField(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(current => !current)}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}